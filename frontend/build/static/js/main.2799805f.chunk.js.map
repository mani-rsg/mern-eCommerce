{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/paymentScreen.js","screens/PlaceOrderScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","cartItem","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","useEffect","a","axios","get","data","response","message","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","params","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","key","Button","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","console","log","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","submitHandler","register","ProfileScreen","Authorization","token","put","updateUserProfile","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","index","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2799805f.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage\n    },\n    userLogin: { userInfo: userInfoFromStorage }\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from '../constants/productConstants'\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state}\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants';\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n            const existItem = state.cartItems.find(cartItem => cartItem.product === item.product);\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(cartItem => cartItem.product === existItem.product ? item : cartItem)\n                }\n            }\n            return { ...state, cartItems: [...state.cartItems, item] }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(cartItem => cartItem.product !== action.payload.product)\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state;\n    }\n}\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {logout} from '../actions/userActions';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>ProShop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to='/cart'>\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\n                            </LinkContainer>\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to='/login'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i> Sign In</Nav.Link>\n                                </LinkContainer>\n                            )}\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users/login', { email, password }, config);\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: USER_LOGOUT })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users', { name, email, password }, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n        const { userLogin: {userInfo} } = getState();\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(`/api/users/profile`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap';\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">\n                        Copyright &copy; Proshop\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n// import PropTypes from 'prop-types';\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\nRating.defaultProps = {\n    color: '#f8e825'\n}\n\n// Rating.propTypes = {\n//     value: PropTypes.number.isRequired,\n//     text: PropTypes.string.isRequired,\n//     color: PropTypes.string\n// }\n\nexport default Rating\n","import React from 'react'\nimport {Link} from 'react-router-dom';\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nconst Product = ({ product }) => {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/products/${product._id}`}>\n                <Card.Img src={product.image} variant='top' />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/products/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n                <Card.Text as=\"div\">\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                </Card.Text>\n                <Card.Text as=\"h3\">${product.price}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap';\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>{children}</Alert>\n    )\n}\nMessage.defaultProps = {\n    variant: 'info'\n}\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' role='status' style={{\n            width: '100px', height: '100px', margin: 'auto', display: 'block'\n        }}>\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    );\n}\n\nexport default Loader;","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Col, Row } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProducts } from '../actions/productActions';\nconst HomeScreen = () => {\n    const dispatch = useDispatch();\n    const productList = useSelector(state => state.productList);\n    const { loading, error, products } = productList;\n    useEffect(() => {\n        dispatch(listProducts());\n    }, [dispatch])\n    return (\n        <>\n            <h1>Latest Products</h1>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Row>\n                    {products.map(product => (\n                        <Col sm={12} md={6} lg={4} xl={3}  key={product._id}>\n                            <Product product={product} />\n                        </Col>\n                    ))}\n                </Row>\n            )}\n        </>\n    )\n}\n\nexport default HomeScreen\n","import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from '../constants/productConstants';\n\nexport const listProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST });\n        const { data } = await axios.get('/api/products');\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\n        const { data } = await axios.get(`/api/products/${id}`);\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Card, Image, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails } from '../actions/productActions';\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1);\n    const dispatch = useDispatch();\n    const productDetails = useSelector(state => state.productDetails);\n    const { loading, error, product } = productDetails;\n    // console.log(loading, error, product, 'states');\n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id));\n    }, [dispatch, match])\n\n    const addToCardHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\n    }\n    return (\n        <>\n            <Link to='/' className='btn btn-light my-3'>\n                Back\n            </Link>\n            {loading ? <Loader /> : error ? <Message variant='danger' /> : (\n                <Row>\n                    <Col md={6}>\n                        <Image src={product.image} alt={product.name} fluid />\n                    </Col>\n                    <Col md={3}>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h3>{product.name}</h3>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                            </ListGroup.Item>\n                            <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                            <ListGroup.Item>Description: {product.description}</ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                    <Col>\n                        <Card>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Price:</Col>\n                                        <Col>{product.price}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Status:</Col>\n                                        <Col>{product.countInStock ? 'In Stock' : 'Out of Stock'}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                {product.countInStock > 0 && (<ListGroup.Item>\n                                    <Row>\n                                        <Col>Qty</Col>\n                                        <Col>\n                                            <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\n                                                {[...Array(product.countInStock).keys()].map((key) => (\n                                                    <option key={key + 1} value={key + 1}>{key + 1}</option>\n                                                ))}\n                                            </Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>)}\n                                <ListGroup.Item>\n                                    <Button\n                                        onClick={addToCardHandler}\n                                        type='button'\n                                        className=\"btn-block\"\n                                        disabled={!product.countInStock}\n                                    >\n                                        Add to Cart\n                                </Button>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Card>\n                    </Col>\n                </Row>\n            )}\n        </>\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`);\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id, history) => (dispatch, getState) => {\n    // console.log(history, id, 'history');\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: { product: id }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    history.push('/cart');\n}\n \nexport const saveShippingAddress = (data) => (dispatch) => {\n    // console.log(history, id, 'history');\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data\n    })\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n}\n\nexport const savePaymentMethod = (paymentMethod) => (dispatch) => {\n    // console.log(history, id, 'history');\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: paymentMethod\n    })\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id;\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n    const dispatch = useDispatch();\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart;\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        console.log(`remove item ${id}`);\n        dispatch(removeFromCart(id, history));\n    }\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                            {[...Array(item.countInStock).keys()].map((key) => (\n                                                <option key={key + 1} value={key + 1}>{key + 1}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\n                                            <i className=\"fas fa-trash\"></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                    </ListGroup>\n                    <ListGroup variant='flush'>\n                        <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\n                            Proceed to Checkout\n                        </Button>\n                    </ListGroup>\n                </Card>\n            </Col>\n\n        </Row >\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport {Container, Row, Col} from 'react-bootstrap';\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { login } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('');\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n    const dispatch = useDispatch();\n    const userLogin = useSelector(state => state.userLogin);\n    const { loading, error, userInfo } = userLogin;\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, redirect, userInfo])\n    const submitHandler = (e) => {\n        e.preventDefault();\n        //todo: Dispatch Login\n        dispatch(login(email, password));\n    }\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n                <Row className='py-3'>\n                    <Col>\n                        New Customer?{' '}\n                        <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                            Register\n                        </Link>\n                    </Col>\n                </Row>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { register } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n    const dispatch = useDispatch();\n    const userRegister = useSelector(state => state.userRegister);\n    const { loading, error, userInfo } = userRegister;\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, redirect, userInfo])\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match');\n        } else {\n            dispatch(register(name, email, password));\n        }\n    }\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='text' placeholder='Enter name' value={name} onChange={e => setName(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary' onClick={submitHandler}>\n                    Register\n                </Button>\n            </Form>\n            <Row className='py-3'>\n                <Col>\n                    Have an Account?{' '}\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Login\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\n\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n    const dispatch = useDispatch();\n    const userDetails = useSelector(state => state.userDetails);\n    const { loading, error, user } = userDetails;\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    const { success } = userUpdateProfile;\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login');\n        }\n        else {\n            if (!user.name) {\n                dispatch(getUserDetails('profile'));\n            }\n            else {\n                setName(user.name);\n                setEmail(user.email);\n            }\n        }\n    }, [dispatch, history, userInfo, user])\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match');\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n        }\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {message && <Message variant=\"danger\">{message}</Message>}\n                {error && <Message variant=\"danger\">{error}</Message>}\n                {success && <Message variant=\"success\">Profile Updated</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type='text' placeholder='Enter name' value={name} onChange={e => setName(e.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type='password' placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Button type='submit' variant='primary' onClick={submitHandler}>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import React from 'react';\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className=\"justify-content-center mb-4\">\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Sign In</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { saveShippingAddress } from '../actions/cartActions';\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector(state => state.cart);\n    const { shippingAddress } = cart;\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n    const dispatch = useDispatch()\n    const submitHandler = (e) => {\n        e.preventDefault();\n        console.log('submit');\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\n        history.push('/payment');\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps  step1 step2/>\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type='text' placeholder='Enter address' value={address} onChange={e => setAddress(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type='text' placeholder='Enter city' value={city} onChange={e => setCity(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control type='text' placeholder='Enter postal code' value={postalCode} onChange={e => setPostalCode(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control type='text' placeholder='Enter country' value={country} onChange={e => setCountry(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\nconst PaymentScreen = ({ history }) => {\n    const cart = useSelector(state => state.cart);\n    const { shippingAddress } = cart;\n\n    if (!shippingAddress) {\n        history.push('/shipping');\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\n    const dispatch = useDispatch()\n    const submitHandler = (e) => {\n        e.preventDefault();\n        console.log('submit');\n        dispatch(savePaymentMethod(paymentMethod));\n        history.push('/placeorder');\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check type='radio' label=\"PayPal or Credit Card\" id=\"PayPal\" name=\"paymentMethod\" value=\"PayPal\" checked onChange={e => setPaymentMethod(e.target.value)}></Form.Check>\n                        <Form.Check type='radio' label=\"Stripe\" id=\"Stripe\" name=\"paymentMethod\" value=\"Stripe\" onChange={e => setPaymentMethod(e.target.value)}></Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nconst PlaceOrderScreen = () => {\n    const cart = useSelector(state => state.cart);\n    // calculate prices\n    const addDecimals = num => (Math.round(num*100)/100).toFixed(2);\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10  )\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice)));\n    cart.totalPrice = (Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2);\n    const placeOrderHandler = () => {\n        console.log('place order');\n    }\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address:</strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city} {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method:</strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/products/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/paymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/products/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}